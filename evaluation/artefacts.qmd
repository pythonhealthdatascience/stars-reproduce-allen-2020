---
title: "Sharing research artefacts"
bibliography: ../quarto_site/references.bib
---

This page evaluates the extent to which the original study meets the recommendations for the sharing of code and associated materials. We compare against two standards:

* **Best practice audit** - requirements from the best practice audit by @monks_computer_2023. The items in this audit were based on @the_turing_way_community_turing_2022, @taylor_open_2017, and @the_open_modeling_foundation_omf_reusability_2024.
* **STARS** - recommendations from the recently published STARS framework by @monks_towards_2024.

## Best practice audit

Of the **11** items in this audit:

* **9** were met fully (‚úÖ)
* **1** was met partially (üü°)
* **1** was not met (‚ùå)

| Item | Description | Met by study? | Evidence/location |
| - | - | :-: | - |
| Digital Object Identifier | Does the model have a DOI and promise of persistence? Can it be cited? | ‚úÖ Fully | [10.5281/zenodo.3760625](https://zenodo.org/doi/10.5281/zenodo.3760625) |
| Open Researcher and Contributor ID (ORCID) | Is the model linked to one or more of the authors via an ORCID? | ‚úÖ Fully | Monks linked to ORCID on Zenodo and in journal article |
| License | Does the repository have a recognised open license to control the use of code, liabilty and credit? | ‚úÖ Fully | MIT license |
| Model overview | Is there an obvious file that provides an overview of the repository/model and it purpose (e.g. in README file)? | ‚úÖ Fully | `README.md` present but doesn't overview repository/model or purpose, although does like to `Capacity_Model_Template.ipynb` which does overview the model |
| Link to published paper | Do models shared externally from journal articles contain a link to the published article? | üü° Partially | Zenodo citations section includes link to the article |
| Steps to run code | Does the readme file or similar describe the steps required to execute the simulation model? | ‚úÖ Fully | Provided in `Capacity_Model_Template.ipynb` |
| Formal dependency management | Has a formal tool, e.g. renv, conda, or poetry been used to manage software dependencies for the simulation model? | ‚úÖ Fully | Conda - `environment.yaml` |
| Informal dependency management | Has an informal list or description of software, or OS dependencies been provided? | ‚úÖ Fully | Within `environment.yaml` |
| Code Testing | Is there any evidence of tests that have been applied to the code to check that it functions correctly? | ‚ùå Not met | No tests found |
| Local execution | Can the simulation model and associated files be downloaded and in theory executed on a local machine | ‚úÖ Fully | I have successfully executed |
| Remote execution | Can the simulation model be executed online using free or commercial infrastructure? | ‚úÖ Fully | The archived code on Zenodo has not been set up to allow this but the [production code on GitLab](https://git.exeter.ac.uk/tmwm201/dialysis-service-delivery-covid19) was set up to allow this (on 23rd April 2020, prior to date journal received article) |
: {tbl-colwidths="[25, 25, 25, 25]"}

## STARS

Of the **7** essential STARS components:

* **5** were met fully (‚úÖ)
* **1** was met partially (üü°)
* **1** was not met (‚ùå)

Of the **5** optional STARS components:

* **1** was met fully (‚úÖ)
* **4** were not met (‚ùå)

| Component | Description | Met by study? | Evidence/location |
| - | - | :-: | - |
| **Essential components** |
| Open license | Free and open-source software (FOSS) license (e.g. MIT, GNU Public License (GPL)) | ‚úÖ Fully | MIT license |
| Dependency management | Specify software libraries, version numbers and sources (e.g. dependency management tools like pip virtual environment, conda environment, poetry) | ‚úÖ Fully | Conda - `environment.yaml` |
| FOSS model | Coded in FOSS language (e.g. R, Julia, Python) | ‚úÖ Fully | Python |
| Minimum documentation | Minimal instructions (e.g. in README) that overview (a) what model does, (b) how to install and run model to obtain results, and (c) how to vary parameters to run new experiements | | |
| ORCID | ORCID for each study author | üü° Partially | Only provided for Monks |
| Citation information | Instructions on how to cite the research artefact (e.g. CITATION.cff file) | ‚ùå Not met | Not provided |
| Remote code repository | Code available in a remote code repository (e.g. GitHub, GitLab, BitBucket) | ‚úÖ Fully | [GitLab](https://git.exeter.ac.uk/tmwm201/dialysis-service-delivery-covid19) |
| Open science archive | Code stored in an open science archive with FORCE11 compliant citation and guaranteed persistance of digital artefacts (e.g. Figshare, Zenodo, the Open Science Framework (OSF), and the Computational Modeling in the Social and Ecological Sciences Network (CoMSES Net)) | ‚úÖ Fully | [Zenodo](https://zenodo.org/doi/10.5281/zenodo.3760625) |
| **Optional components** |
| Enhanced documentation | Open and high quality documentation on how the model is implemented and works  (e.g. via notebooks and markdown files, brought together using software like Quarto and Jupyter Book). Suggested content includes:<br>‚Ä¢ Plain english summary of project and model<br>‚Ä¢ Clarifying license<br>‚Ä¢ Citation instructions<br>‚Ä¢ Contribution instructions<br>‚Ä¢ Model installation instructions<br>‚Ä¢ Structured code walk through of model<br>‚Ä¢ Documentation of modelling cycle using TRACE<br>‚Ä¢ Annotated simulation reporting guidelines<br>‚Ä¢ Clear description of model validation including its intended purpose | ‚ùå Not met | `README.md` has simple installation instructions, whilst `Capacity_Model_Template.ipynb` has plain english summary of model and simple walk through. However, many of these suggestions are not captured, and documentation is felt to just meet the criteria of "minimum documentation" |
| Documentation hosting | Host documentation (e.g. with GitHub pages, GitLab pages, BitBucket Cloud, Quarto Pub) | ‚ùå Not met | Not hosted. |
| Online coding environment | Provide an online environment where users can run and change code (e.g. BinderHub, Google Colaboratory, Deepnote) | ‚úÖ Fully | The archived code on Zenodo has not been set up to allow this but the [production code on GitLab](https://git.exeter.ac.uk/tmwm201/dialysis-service-delivery-covid19) was set up to allow this (on 23rd April 2020, prior to date journal received article) |
| Model interface | Provide web application interface to the model so it is accessible to less technical simulation users | ‚ùå Not met | - |
| Web app hosting | Host web app online (e.g. Streamlit Community Cloud, ShinyApps hosting) | ‚ùå Not met | - |
: {tbl-colwidths="[20, 35, 20, 25]"}
[
  {
    "objectID": "evaluation/reproduction_report.html",
    "href": "evaluation/reproduction_report.html",
    "title": "Computational reproducibility report",
    "section": "",
    "text": "Plain english summary"
  },
  {
    "objectID": "evaluation/posts/2024_05_09/index.html",
    "href": "evaluation/posts/2024_05_09/index.html",
    "title": "Day 1",
    "section": "",
    "text": "This is an example post."
  },
  {
    "objectID": "evaluation/posts/2024_05_09/index.html#reading-paper",
    "href": "evaluation/posts/2024_05_09/index.html#reading-paper",
    "title": "Day 1",
    "section": "1100 - 1143 - Reading paper",
    "text": "1100 - 1143 - Reading paper\n\n5 figures, 6 tables\nParameter A 123\nParameter B 456"
  },
  {
    "objectID": "evaluation/posts/2024_05_09/index.html#downloading-materials",
    "href": "evaluation/posts/2024_05_09/index.html#downloading-materials",
    "title": "Day 1",
    "section": "1145 - 1200 - Downloading materials",
    "text": "1145 - 1200 - Downloading materials\nSource: link to materials\nSaved to this repository."
  },
  {
    "objectID": "evaluation/posts/2024_05_09/index.html#creating-environment",
    "href": "evaluation/posts/2024_05_09/index.html#creating-environment",
    "title": "Day 1",
    "section": "1200 - 1205 - Creating environment",
    "text": "1200 - 1205 - Creating environment\nNo environment file provided, so created based on packages used in scripts and versions provided in the paper."
  },
  {
    "objectID": "evaluation/badges.html",
    "href": "evaluation/badges.html",
    "title": "Badges",
    "section": "",
    "text": "This page evaluates the extent to which Monks et al.¬†2016 meets the criteria of badges related to reproducibility from various organisations and journals.\n\n\nCode\nimport numpy as np\nimport pandas as pd\n\ncriteria = {\n    'archive': 'Code is stored in a permanent archive that is publicly and openly accessible',\n    'id': 'It has a persistent identifier (e.g. DOI)',\n    'license': 'It has an open license',\n    'complete_open': 'Complete set of materials shared (as would be needed to fully reproduce article)',\n    'meta': 'Metadata describes data/code sufficiently to enable reproduction (e.g. package versions)',\n    'statement': 'Manuscript has data availability statement',\n    # DUPE with complete_open above (to reflect on)\n    'complete_review': 'Complete set of materials shared (as would be needed to fully reproduce article)',\n    # DUPE with meta above (to reflect on)\n    'describe_minimal': 'There is a minimal but sufficient description of artefacts',\n    'describe_careful': 'There is a more detailed, careful documentation of artefacts',\n    'artefacts_structure': 'Artefacts are well structured to facilitate reuse, adhering to norms and standards of research community',\n    'regenerated': 'Independent party regenerated results using the authors research artefacts',\n    'hour': 'Reproduced within approximately one hour (excluding compute time)',\n    # DUPE with artefacts_structure and meta/describe\n    'reproduce_organise': 'Requires data and scripts to be well-organised, clearly documented and with a README file with step-by-step instructions on how to reproduce results in the manuscript'\n}\n\nbadge_names = {\n    # ISSUE: need to make seperate criteria for code and data (unless just do code?)\n    'open_niso': 'NISO \"Open Research Objects\"',\n    'open_acm': 'ACM \"Artifacts Available\"',\n    'open_cos_data': 'COS \"Open Data\"',\n    'open_cos_materials': 'COS \"Open Materials\"',\n    'open_cos_code': 'COS \"Open Code\"',\n    # ISSUE: need to make seperate criteria for code and data (unless just do code?)\n    'open_ieee_code': 'IEEE \"Code Available\"',\n    'open_ieee_data': 'IEEE \"Datasets Available\"',\n    'open_springer': 'Springer Nature \"Badge for Open Data\"',\n    'review_acm_functional': 'ACM \"Artifacts Evaluated - Functional\"',\n    'review_acm_reusable': 'ACM \"Artifacts Evaluated - Reusable\"',\n    # ISSUE: need to make seperate criteria for code and data (unless just do code?)\n    'review_ieee_code': 'IEEE \"Code Reviewed\"',\n    'review_ieee_data': 'IEEE \"Datasets Reviewed\"',\n    'reproduce_niso': 'NISO \"Results Reproduced\"',\n    'reproduce_acm': 'ACM \"Results Reproduced\"',\n    # ISSUE: need to make seperate criteria for code and data (unless just do code?)\n    'reproduce_ieee_code': 'IEEE \"Code Reproducible\"',\n    'reproduce_ieee_data': 'IEEE \"Dataset Reproducible\"',\n    'reproduce_psy': 'Psychological Science \"Computational Reproducibility\"'\n}\n\nopen_cos = ['archive', 'id', 'license', 'complete_open', 'meta']\n\nbadges = {\n    'open_niso': ['archive', 'id', 'license', 'complete_open'],\n    'open_acm': ['archive', 'id'],\n    'open_cos_data': open_cos,\n    'open_cos_materials': open_cos,\n    'open_cos_code': open_cos,\n    'open_ieee_code': ['complete_open'],\n    # etc. etc.\n}\n\n\nTO DO: Change to full list of criteria\nTO DO: Change to full list of badges\nTO DO: Add a table (perhaps minimise-able) that summarises the criteria of each badge, so can see how/why did or did not meet each of the badges.\n\n\nCode\n# Example (not done for Monks et al. 2016 yet)\n# Based on the criteria dictionary above, populate with 1 and 0\neval = pd.Series({\n    'archive': 1,\n    'id': 1,\n    'license': 0,\n    'complete_open': 1,\n    'meta': 1,\n    'statement': 1\n    # etc. etc.\n})\n\n\n\n\nCode\n# Print compliance to each criteria\nfor key, value in eval.items(): \n    if value == 1:\n        icon = '‚úÖ'\n    else:\n        icon = '‚¨ú'\n    print(f'{icon} {criteria[key]}')\n\n\n‚úÖ Code is stored in a permanent archive that is publicly and openly accessible\n‚úÖ It has a persistent identifier (e.g. DOI)\n‚¨ú It has an open license\n‚úÖ Complete set of materials shared (as would be needed to fully reproduce article)\n‚úÖ Metadata describes data/code sufficiently to enable reproduction (e.g. package versions)\n‚úÖ Manuscript has data availability statement\n\n\n\n\nCode\n# Identify which badges would be awarded based on criteria\naward = {}\nfor badge in badges:\n    award[badge] = all([eval[key] == 1 for key in badges[badge]])\n\n# Print results\nfor key, value in award.items(): \n    if value:\n        icon = '‚úÖ'\n    else:\n        icon = '‚¨ú'\n    print(f'{icon} {badge_names[key]}')\n\n\n‚¨ú NISO \"Open Research Objects\"\n‚úÖ ACM \"Artifacts Available\"\n‚¨ú COS \"Open Data\"\n‚¨ú COS \"Open Materials\"\n‚¨ú COS \"Open Code\"\n‚úÖ IEEE \"Code Available\""
  },
  {
    "objectID": "evaluation/reporting.html",
    "href": "evaluation/reporting.html",
    "title": "Reporting",
    "section": "",
    "text": "This page evaluates the extent to which Monks et al.¬†2016 meets the criteria from two discrete-event simulation study reporting guidelines:\nif we apply this later down the line, what about if its not discrete-event?"
  },
  {
    "objectID": "evaluation/reporting.html#stress-des",
    "href": "evaluation/reporting.html#stress-des",
    "title": "Reporting",
    "section": "STRESS-DES",
    "text": "STRESS-DES\nexample fill in, not actual\nTotal (out of 5):\n\n‚úÖ Fully - 20% (n=1)\nüü° Partially - 20% (n=1)\n‚ùå Not met - 20% (n=1)\n‚ùî Unclear - 40% (n=2)\n\n\n\n\n\n\n\n\n\n\nItem\nRecommendation\nMet by study?\nEvidence/location\n\n\n\n\nObjectives\n\n\n\n\n\n1.1 Purpose of the model\nExplain the background and objectives for the model\n‚úÖ Fully\n\n\n\n1.2 Model outputs\nDefine all quantitative performance measures that are reported, using equations where necessary. Specify how and when they are calculated during the model run along with how any measures of error such as confidence intervals are calculated.\nüü° Partially\n\n\n\n1.3 Experimentation aims\nIf the model has been used for experimentation, state the objectives that it was used to investigate.(A) Scenario based analysis ‚Äì Provide a name and description for each scenario, providing a rationale for the choice of scenarios and ensure that item 2.3 (below) is completed.(B) Design of experiments ‚Äì Provide details of the overall design of the experiments with reference to performance measures and their parameters (provide further details in data below).(C) Simulation Optimisation ‚Äì (if appropriate) Provide full details of what is to be optimised, the parameters that were included and the algorithm(s) that was be used. Where possible provide a citation of the algorithm(s).\n‚ùå Not met\n\n\n\nLogic\n\n\n\n\n\n2.1 Base model overview diagram\nDescribe the base model using appropriate diagrams and description. This could include one or more process flow, activity cycle or equivalent diagrams sufficient to describe the model to readers. Avoid complicated diagrams in the main text. The goal is to describe the breadth and depth of the model with respect to the system being studied.\n‚ùî Unclear\n\n\n\n2.2 Base model logic\nGive details of the base model logic. Give additional model logic details sufficient to communicate to the reader how the model works.\n‚ùî Unclear\n\n\n\n2.3 Scenario logic\nGive details of the logical difference between the base case model and scenarios (if any). This could be incorporated as text or where differences are substantial could be incorporated in the same manner as 2.2.\n\n\n\n\n2.4 Algorithms\nProvide further detail on any algorithms in the model that (for example) mimic complex or manual processes in the real world (i.e.¬†scheduling of arrivals/appointments/operations/maintenance, operation of a conveyor system, machine breakdowns, etc.). Sufficient detail should be included (or referred to in other published work) for the algorithms to be reproducible. Pseudo-code may be used to describe an algorithm.\n\n\n\n\n2.5.1 Components - entities\nGive details of all entities within the simulation including a description of their role in the model and a description of all their attributes.\n\n\n\n\n2.5.2 Components - activities\nDescribe the activities that entities engage in within the model. Provide details of entity routing into and out of the activity.\n\n\n\n\n2.5.3 Components - resources\nList all the resources included within the model and which activities make use of them.\n\n\n\n\n2.5.4 Components - queues\nGive details of the assumed queuing discipline used in the model (e.g.¬†First in First Out, Last in First Out, prioritisation, etc.). Where one or more queues have a different discipline from the rest, provide a list of queues, indicating the queuing discipline used for each. If reneging, balking or jockeying occur, etc., provide details of the rules. Detail any delays or capacity constraints on the queues.\n\n\n\n\n2.5.5 Components - entry/exit points\nGive details of the model boundaries i.e.¬†all arrival and exit points of entities. Detail the arrival mechanism (e.g.¬†‚Äòthinning‚Äô to mimic a non-homogenous Poisson process or balking)\n\n\n\n\nData\n\n\n\n\n\n3.1 Data sources\nList and detail all data sources. Sources may include:‚Ä¢ Interviews with stakeholders,‚Ä¢ Samples of routinely collected data,‚Ä¢ Prospectively collected samples for the purpose of the simulation study,‚Ä¢ Public domain data published in either academic or organisational literature. Provide, where possible, the link and DOI to the data or reference to published literature.All data source descriptions should include details of the sample size, sample date ranges and use within the study.\n\n\n\n\n3.2 Pre-processing\nProvide details of any data manipulation that has taken place before its use in the simulation, e.g.¬†interpolation to account for missing data or the removal of outliers.\n\n\n\n\n3.3 Input parameters\nList all input variables in the model. Provide a description of their use and include parameter values. For stochastic inputs provide details of any continuous, discrete or empirical distributions used along with all associated parameters. Give details of all time dependent parameters and correlation.Clearly state:‚Ä¢ Base case data‚Ä¢ Data use in experimentation, where different from the base case.‚Ä¢ Where optimisation or design of experiments has been used, state the range of values that parameters can take.Where theoretical distributions are used, state how these were selected and prioritised above other candidate distributions.\n\n\n\n\n3.4 Assumptions\nWhere data or knowledge of the real system is unavailable what assumptions are included in the model? This might include parameter values, distributions or routing logic within the model.\n\n\n\n\nExperimentation\n\n\n\n\n\n4.1 Initialisation\nReport if the system modelled is terminating or non-terminating. State if a warm-up period has been used, its length and the analysis method used to select it. For terminating systems state the stopping condition.State what if any initial model conditions have been included, e.g., pre-loaded queues and activities. Report whether initialisation of these variables is deterministic or stochastic.\n\n\n\n\n4.2 Run length\nDetail the run length of the simulation model and time units.\n\n\n\n\n4.3 Estimation approach\nState the method used to account for the stochasticity: For example, two common methods are multiple replications or batch means. Where multiple replications have been used, state the number of replications and for batch means, indicate the batch length and whether the batch means procedure is standard, spaced or overlapping. For both procedures provide a justification for the methods used and the number of replications/size of batches.\n\n\n\n\nImplementation\n\n\n\n\n\n5.1 Software or programming language\nState the operating system and version and build number.State the name, version and build number of commercial or open source DES software that the model is implemented in.State the name and version of general-purpose programming languages used (e.g.¬†Python 3.5).Where frameworks and libraries have been used provide all details including version numbers.\n\n\n\n\n5.2 Random sampling\nState the algorithm used to generate random samples in the software/programming language used e.g.¬†Mersenne Twister.If common random numbers are used, state how seeds (or random number streams) are distributed among sampling processes.\n\n\n\n\n5.3 Model execution\nState the event processing mechanism used e.g.¬†three phase, event, activity, process interaction.Note that in some commercial software the event processing mechanism may not be published. In these cases authors should adhere to item 5.1 software recommendations.State all priority rules included if entities/activities compete for resources.If the model is parallel, distributed and/or use grid or cloud computing, etc., state and preferably reference the technology used. For parallel and distributed simulations the time management algorithms used. If the HLA is used then state the version of the standard, which run-time infrastructure (and version), and any supporting documents (FOMs, etc.)\n\n\n\n\n5.4 System specification\nState the model run time and specification of hardware used. This is particularly important for large scale models that require substantial computing power. For parallel, distributed and/or use grid or cloud computing, etc. state the details of all systems used in the implementation (processors, network, etc.)\n\n\n\n\nCode access\n\n\n\n\n\n6.1 Computer model sharing statement\nDescribe how someone could obtain the model described in the paper, the simulation software and any other associated software (or hardware) needed to reproduce the results. Provide, where possible, the link and DOIs to these."
  },
  {
    "objectID": "evaluation/reporting.html#ispor-sdm",
    "href": "evaluation/reporting.html#ispor-sdm",
    "title": "Reporting",
    "section": "ISPOR-SDM",
    "text": "ISPOR-SDM\nTotal (out of 4):\n\n‚úÖ Fully - 25% (n=1)\nüü° Partially - 25% (n=1)\n‚ùå Not met - 25% (n=1)\n‚ùî Unclear - 25% (n=1)\n\n\n\n\n\n\n\n\n\n\nItem\nAssessed if‚Ä¶\nMet by study?\nEvidence/location\n\n\n\n\nModel conceptualisation\n\n\n\n\n\n1 Is the focused health-related decision problem clarified?\n‚Ä¶the decision problem under investigation was defined. DES studies included different types of decision problems, eg, those listed in previously developed taxonomies.\nüü° Partially\n\n\n\n2 Is the modeled healthcare setting/health condition clarified?\n‚Ä¶the physical context/scope (eg, a certain healthcare unit or a broader system) or disease spectrum simulated was described.\n‚ùå Not met\n\n\n\n3 Is the model structure described?\n‚Ä¶the model‚Äôs conceptual structure was described in the form of either graphical or text presentation.\n‚úÖ Fully\n\n\n\n4 Is the time horizon given?\n‚Ä¶the time period covered by the simulation was reported.\n\n\n\n\n5 Are all simulated strategies/scenarios specified?\n‚Ä¶the comparators under test were described in terms of their components, corresponding variations, etc\n‚ùî Unclear\n\n\n\n6 Is the target population described?\n‚Ä¶the entities simulated and their main attributes were characterized.\n\n\n\n\nParamaterisation and uncertainty assessment\n\n\n\n\n\n7 Are data sources informing parameter estimations provided?\n‚Ä¶the sources of all data used to inform model inputs were reported.\n\n\n\n\n8 Are the parameters used to populate model frameworks specified?\n‚Ä¶all relevant parameters fed into model frameworks were disclosed.\n\n\n\n\n9 Are model uncertainties discussed?\n‚Ä¶the uncertainty surrounding parameter estimations and adopted statistical methods (eg, 95% confidence intervals or possibility distributions) were reported.\n\n\n\n\n10 Are sensitivity analyses performed and reported?\n‚Ä¶the robustness of model outputs to input uncertainties was examined, for example via deterministic (based on parameters‚Äô plausible ranges) or probabilistic (based on a priori-defined probability distributions) sensitivity analyses, or both.\n\n\n\n\nValidation\n\n\n\n\n\n11 Is face validity evaluated and reported?\n‚Ä¶it was reported that the model was subjected to the examination on how well model designs correspond to the reality and intuitions. It was assumed that this type of validation should be conducted by external evaluators with no stake in the study.\n\n\n\n\n12 Is cross validation performed and reported\n‚Ä¶comparison across similar modeling studies which deal with the same decision problem was undertaken.\n\n\n\n\n13 Is external validation performed and reported?\n‚Ä¶the modeler(s) examined how well the model‚Äôs results match the empirical data of an actual event modeled.\n\n\n\n\n14 Is predictive validation performed or attempted?\n‚Ä¶the modeler(s) examined the consistency of a model‚Äôs predictions of a future event and the actual outcomes in the future. If this was not undertaken, it was assessed whether the reasons were discussed.\n\n\n\n\nGeneralisability and stakeholder involvement\n\n\n\n\n\n15 Is the model generalizability issue discussed?\n‚Ä¶the modeler(s) discussed the potential of the resulting model for being applicable to other settings/populations (single/multiple application).\n\n\n\n\n16 Are decision makers or other stakeholders involved in modeling?\n‚Ä¶the modeler(s) reported in which part throughout the modeling process decision makers and other stakeholders (eg, subject experts) were engaged.\n\n\n\n\n17 Is the source of funding stated?\n‚Ä¶the sponsorship of the study was indicated.\n\n\n\n\n18 Are model limitations discussed?\n‚Ä¶limitations of the assessed model, especially limitations of interest to decision makers, were discussed."
  },
  {
    "objectID": "reproduction/scripts/example.html",
    "href": "reproduction/scripts/example.html",
    "title": "Example notebook (ipynb)",
    "section": "",
    "text": "This could be .ipynb or .Qmd. This example is .ipynb. Taken from HSMA DES Book.\n\nimport simpy\nimport random\nimport pandas as pd\n\n\n# Global parameter values\n# Don't make instance of this class, just access it directly\nclass g:\n    patient_inter = 5\n    mean_n_consult_time = 6\n    number_of_nurses = 1\n    sim_duration = 120\n    number_of_runs = 5\n\n\n# Entity (Patient) with two attributes: ID and time queueing\nclass Patient:\n    def __init__(self, p_id):\n        self.id = p_id\n        self.q_time_nurse = 0\n\n\nclass Model:\n    # Constructor to set up model for run\n    def __init__(self, run_number):\n        self.env = simpy.Environment()\n        self.patient_counter = 0\n        self.nurse = simpy.Resource(self.env, capacity=g.number_of_nurses)\n        self.run_number = run_number\n        # Blank dataframe for results\n        self.results_df = pd.DataFrame()\n        self.results_df[\"Patient ID\"] = [1]\n        self.results_df[\"Q Time Nurse\"] = [0.0]\n        self.results_df[\"Time with Nurse\"] = [0.0]\n        self.results_df.set_index(\"Patient ID\", inplace=True)\n        # Blank attribute to store mean queue time of run\n        self.mean_q_time_nurse = 0\n\n    # Generator function for patient arriving\n    def generator_patient_arrivals(self):\n        # Infinite loop does this indefinitely during simulation run\n        while True:\n            self.patient_counter += 1\n            # Create a new patient\n            p = Patient(self.patient_counter)\n            # Send through process\n            self.env.process(self.attend_clinic(p))\n            # Sample time to next patient (inter-arrival time)\n            sampled_inter = random.expovariate(1.0 / g.patient_inter)\n            # Freeze this instance of this function until time has elapsed\n            yield self.env.timeout(sampled_inter)\n\n    # Generator function for patient going through clinic\n    def attend_clinic(self, patient):\n        # Wait start time\n        start_q_nurse = self.env.now\n        # Request a nurse resource\n        with self.nurse.request() as req:\n            # Queue until resource available\n            yield req\n            # Wait end time\n            end_q_nurse = self.env.now\n            patient.q_time_nurse = end_q_nurse - start_q_nurse\n            # Sample time with nurse\n            sampled_nurse_act_time = random.expovariate(1.0 /\n                                                        g.mean_n_consult_time)\n            # Store queue time and time with nurse in results\n            self.results_df.at[patient.id, \"Q Time Nurse\"] = (\n                patient.q_time_nurse)\n            self.results_df.at[patient.id, \"Time with Nurse\"] = (\n                sampled_nurse_act_time)\n            # Freeze this instance of this function (i.e. for this entity) for the time spent with nurse\n            yield self.env.timeout(sampled_nurse_act_time)\n            # Sink\n\n\n    def calculate_run_results(self):\n        # Find mean queue time\n        self.mean_q_time_nurse = self.results_df[\"Q Time Nurse\"].mean()\n\n\n    def run(self):\n        # Start up DES entity generators that create new patients\n        self.env.process(self.generator_patient_arrivals())\n        # Run the model\n        self.env.run(until=g.sim_duration)\n        # Calculate results\n        self.calculate_run_results()\n        # Print results\n        print (f\"Run Number {self.run_number}\")\n        print (self.results_df)\n\n\nclass Trial:\n    # Set up dataframe to store results from each run\n    def  __init__(self):\n        self.df_trial_results = pd.DataFrame()\n        self.df_trial_results[\"Run Number\"] = [0]\n        self.df_trial_results[\"Mean Q Time Nurse\"] = [0.0]\n        self.df_trial_results.set_index(\"Run Number\", inplace=True)\n\n    # Print trial results\n    def print_trial_results(self):\n        print (\"Trial Results\")\n        print (self.df_trial_results)\n\n    def run_trial(self):\n        for run in range(g.number_of_runs):\n            # Conduct run of model\n            my_model = Model(run)\n            my_model.run()\n            # Store results from run\n            self.df_trial_results.loc[run] = [my_model.mean_q_time_nurse]\n        # Print trial results\n        self.print_trial_results()\n\n# To run the above, create instance of trial class and run it\nmy_trial = Trial()\nmy_trial.run_trial()\n\nRun Number 0\n            Q Time Nurse  Time with Nurse\nPatient ID                               \n1               0.000000         0.409188\n2               0.000000         8.100493\n3               5.742528         2.027577\n4               0.285292         8.021103\n5               2.169934         0.812972\n6               1.787660         4.975679\n7               4.152844         8.475809\n8               0.636725        11.118521\n9               9.933379        13.579424\n10             19.631816         2.318209\n11             15.678563         4.760156\n12             17.947855         2.919600\n13             18.492176         0.566682\n14             12.620286         1.183490\n15             12.140536         1.326338\n16             12.858259         7.448187\n17             18.428704         5.328174\n18             19.953129         3.616531\n19             18.001635         5.880564\n20             22.429778         0.267782\n21             22.320529         2.487885\n22              9.548502         9.597006\n23             14.396941         6.272699\n24             16.072207         3.328748\n25             18.122587        10.206102\nRun Number 1\n            Q Time Nurse  Time with Nurse\nPatient ID                               \n1               0.000000         2.516259\n2               1.115424         3.644607\n3               0.000000         7.944117\n4               0.000000         8.811074\n5               4.310967         0.425983\n6               3.417324         0.212787\n7               0.000000         4.535966\n8               3.986428         2.065685\n9               0.000000        16.135685\n10              9.562419         0.772438\n11              8.888352         3.674308\n12              3.275494         2.214535\n13              0.000000        22.009625\n14             16.755442         2.618881\n15             14.796738         7.545737\n16             21.098239         7.087591\n17             17.525011         6.807372\nRun Number 2\n            Q Time Nurse  Time with Nurse\nPatient ID                               \n1               0.000000         3.331999\n2               0.000000         2.926743\n3               0.000000        25.176285\n4               3.245599         0.461992\n5               0.000000         0.079364\n6               0.000000         2.698655\n7               1.053251         1.164030\n8               1.610119         0.155731\n9               0.919789        15.679076\n10              0.000000         2.977460\n11              0.000000         5.333376\n12              0.000000         0.655473\nRun Number 3\n            Q Time Nurse  Time with Nurse\nPatient ID                               \n1               0.000000         6.980844\n2               3.038776        11.509943\n3               0.000000         1.347718\n4               0.000000         0.179672\n5               0.000000         2.533136\n6               0.000000         4.348770\n7               1.146818        12.305038\n8               7.843208         3.427361\n9              10.488391        10.138762\n10             20.552358        21.661585\n11             25.784807         4.094876\n12             28.399336         3.926248\n13             22.634506        16.149078\nRun Number 4\n            Q Time Nurse  Time with Nurse\nPatient ID                               \n1               0.000000         0.949441\n2               0.000000         5.865261\n3               4.826353         6.488822\n4               8.417712         4.738231\n5               6.414321         3.498835\n6               0.000000        10.198860\n7               0.441545         4.262194\n8               4.699087         4.872532\n9               0.000000         3.793313\n10              0.000000         1.189360\n11              0.000000        26.569040\nTrial Results\n            Mean Q Time Nurse\nRun Number                   \n0                   11.734075\n1                    6.160696\n2                    0.569063\n3                    9.222169\n4                    2.254456"
  },
  {
    "objectID": "quarto_site/study_code.html",
    "href": "quarto_site/study_code.html",
    "title": "Code",
    "section": "",
    "text": "insert the code as copied into repository."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Reproducing Allen et al. 2020",
    "section": "",
    "text": "This book captures the reproduction of:"
  },
  {
    "objectID": "index.html#citation",
    "href": "index.html#citation",
    "title": "Reproducing Allen et al. 2020",
    "section": "Citation",
    "text": "Citation\nAPA: Heather A. (2024). Reproducing Allen et al.¬†2020 URL: https://github.com/pythonhealthdatascience/stars-reproduce-allen-2020\nSee CITATION.cff and citation_bibtex.bib for alternative formats."
  },
  {
    "objectID": "CHANGELOG.html",
    "href": "CHANGELOG.html",
    "title": "Changelog",
    "section": "",
    "text": "Changelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning. Dates formatted as YYYY-MM-DD as per ISO standard."
  },
  {
    "objectID": "quarto_site/study_summary.html",
    "href": "quarto_site/study_summary.html",
    "title": "Summary",
    "section": "",
    "text": "all those key information bits that we pull during reproduction"
  },
  {
    "objectID": "quarto_site/study_publication.html",
    "href": "quarto_site/study_publication.html",
    "title": "Publication",
    "section": "",
    "text": "embeds the article and supplementary\n(as they have been copied into repository)\n&lt;!‚Äì  ‚Äì!&gt;&lt;/p&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Reproducing Allen et al.¬†2020&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Reproducing Allen et al.¬†2020&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Original study\"&gt;Original study&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Summary\"&gt;Summary&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/quarto_site/study_summary.html\"&gt;/quarto_site/study_summary.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Publication\"&gt;Publication&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/quarto_site/study_publication.html\"&gt;/quarto_site/study_publication.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Code\"&gt;Code&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/quarto_site/study_code.html\"&gt;/quarto_site/study_code.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Reproduction code\"&gt;Reproduction code&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Example notebook (ipynb)\"&gt;Example notebook (ipynb)&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/reproduction/scripts/example.html\"&gt;/reproduction/scripts/example.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Evaluation\"&gt;Evaluation&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Reproduction success\"&gt;Reproduction success&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/evaluation/reproduction_success.html\"&gt;/evaluation/reproduction_success.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Sharing research artefacts\"&gt;Sharing research artefacts&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/evaluation/artefacts.html\"&gt;/evaluation/artefacts.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Badges\"&gt;Badges&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/evaluation/badges.html\"&gt;/evaluation/badges.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Reporting\"&gt;Reporting&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/evaluation/reporting.html\"&gt;/evaluation/reporting.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Logbook\"&gt;Logbook&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/evaluation/logbook.html\"&gt;/evaluation/logbook.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Report\"&gt;Report&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/evaluation/reproduction_report.html\"&gt;/evaluation/reproduction_report.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:https://github.com/pythonhealthdatascience/stars-reproduce-allen-2020\"&gt;https://github.com/pythonhealthdatascience/stars-reproduce-allen-2020&lt;/span&gt;&lt;/p&gt;\n&lt;div class=\"hidden\" data-render-id=\"footer-left\"&gt;\n&lt;p&gt;&lt;a href=\"https://github.com/pythonhealthdatascience\"&gt;&lt;img src=\"https://raw.githubusercontent.com/pythonhealthdatascience/stars-logo/main/stars_logo_blue_text.png\" class=\"img-fluid\" alt=\"STARS\" width=\"300\" /&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div class=\"hidden\" data-render-id=\"footer-center-/CHANGELOG.html\"&gt;\n&lt;p&gt;Changelog&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Reproducing Allen et al.¬†2020 - Publication&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Reproducing Allen et al.¬†2020 - Publication&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Reproducing Allen et al.¬†2020 - Publication&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Reproducing Allen et al.¬†2020&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"Óßã\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n    var localhostRegex = new RegExp(/^(?:http|https):\\/\\/localhost\\:?[0-9]*\\//);\n    var mailtoRegex = new RegExp(/^mailto:/);\n      var filterRegex = new RegExp(\"https:\\/\\/pythonhealthdatascience\\.github\\.io\\/stars-reproduce-allen-2020\\/\");\n    var isInternal = (href) =&gt; {\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\n    }\n    // Inspect non-navigation links and adorn them if external\n \tvar links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool)');\n    for (var i=0; i&lt;links.length; i++) {\n      const link = links[i];\n      if (!isInternal(link.href)) {\n        // undo the damage that might have been done by quarto-nav.js in the case of\n        // links that we want to consider external\n        if (link.dataset.originalHref !== undefined) {\n          link.href = link.dataset.originalHref;\n        }\n      }\n    }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      if (note) {\n        return note.innerHTML;\n      } else {\n        return \"\";\n      }\n    });\n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      // TODO in 1.5, we should make sure this works without a callout special case\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;[![](https://raw.githubusercontent.com/pythonhealthdatascience/stars-logo/main/stars_logo_blue_text.png){fig-alt=\"STARS\" width=300px}](https://github.com/pythonhealthdatascience)\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &lt;ul class=\"footer-items list-unstyled\"&gt;\n    &lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"nav-link\" href=\"/CHANGELOG.html\"&gt;\n Changelog\n    &lt;/a&gt;\n  &lt;/li&gt;  \n&lt;/ul&gt;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;ul class=\"footer-items list-unstyled\"&gt;\n    &lt;li class=\"nav-item compact\"&gt;\n    &lt;a class=\"nav-link\" href=\"https://github.com/pythonhealthdatascience/stars-reproduce-allen-2020\"&gt;\n      &lt;i \n  class=\"bi bi-github\" \n  role=\"img\" \n&gt;\n&lt;/i&gt; \n    &lt;/a&gt;\n  &lt;/li&gt;  \n&lt;/ul&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "evaluation/artefacts.html",
    "href": "evaluation/artefacts.html",
    "title": "Sharing research artefacts",
    "section": "",
    "text": "This page evaluates the extent to which Monks et al.¬†2016 meets the recommendations for the sharing of code and associated materials.\nFirst, it copies information from the best practice audit by Monks and Harper (2023). The items in this audit were based on ADD CITATIONS.\nSecondly, it assesses whether the article meets recommendations from the recently published STARS framework by Monks, Harper, and Mustafee (2024)."
  },
  {
    "objectID": "evaluation/artefacts.html#best-practice-audit-monks-and-harper-2023",
    "href": "evaluation/artefacts.html#best-practice-audit-monks-and-harper-2023",
    "title": "Sharing research artefacts",
    "section": "Best practice audit (Monks and Harper 2023)",
    "text": "Best practice audit (Monks and Harper 2023)\n\n\n\n\n\n\n\n\nItem\nDescription\nMet by study?\n\n\n\n\nDigital Object Identifier\nDoes the model have a DOI and promise of persistence? Can it be cited?\n\n\n\nOpen Researcher and Contributor ID\nIs the model linked to one or more of the authors via an ORCID?\n\n\n\nLicence\nDoes the repository have a recognised open license to control the use of code, liabilty and credit?\n\n\n\nReadme file\nIs there an obvious file that provides an overview of the repository/model and it purpose?\n\n\n\nLink to published paper\nDo models shared externally from journal articles contain a link to the published article?\n\n\n\nSteps to run code\nDoes the readme file or similar describe the steps required to execute the simulation model?\n\n\n\nFormal dependency management\nHas a formal tool, e.g.¬†renv, conda, or poetry been used to manage software dependencies for the simulation model?\n\n\n\nInformal dependency management\nHas an informal list or description of software, or OS dependencies been provided?\n\n\n\nCode Testing\nIs there any evidence of tests that have been applied to the code to check that it functions correctly?\n\n\n\nLocal execution\nCan the simulation model and associated files be downloaded and in theory executed on a local machine\n\n\n\nRemote execution\nCan the simulation model be executed online using free or commercial infrastructure?"
  },
  {
    "objectID": "evaluation/artefacts.html#stars",
    "href": "evaluation/artefacts.html#stars",
    "title": "Sharing research artefacts",
    "section": "STARS",
    "text": "STARS\n\n\n\n\n\n\n\n\nComponent\nMet by study?\nEvidence/location\n\n\n\n\nEssential components\n\n\n\n\nOpen license\n‚úÖ Fully\n\n\n\nDependency management\nüü° Partially\n\n\n\nModel created using free and open-source software (FOSS)\n‚ùå Not met\n\n\n\nMinimum documentation\n‚ùî Unclear\n\n\n\nResearch artefact metadata: Open Researcher and Contributor ID (ORCID) and citation information\n\n\n\n\nRemote code repository\n\n\n\n\nOpen science archive\n\n\n\n\nOptional components\n\n\n\n\nEnhanced documentation\n\n\n\n\nDocumentation hosting\n\n\n\n\nOnline coding environment\n\n\n\n\nModel interface\n\n\n\n\nWeb app hosting"
  },
  {
    "objectID": "evaluation/reproduction_success.html",
    "href": "evaluation/reproduction_success.html",
    "title": "Reproduction success",
    "section": "",
    "text": "A"
  },
  {
    "objectID": "evaluation/logbook.html",
    "href": "evaluation/logbook.html",
    "title": "Logbook",
    "section": "",
    "text": "These diary entries record daily progress in reproduction of the study, providing a transparent and detailed record of work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDay 2\n\n\n\n\n\n\nexample\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMay 10, 2024\n\n\nAmy Heather\n\n\n\n\n\n\n\n\n\n\n\n\nDay 1\n\n\n\n\n\n\nsetup\n\n\nreading\n\n\n\n\n\n\n\n\n\nMay 9, 2024\n\n\nAmy Heather\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "evaluation/posts/2024_05_10/index.html",
    "href": "evaluation/posts/2024_05_10/index.html",
    "title": "Day 2",
    "section": "",
    "text": "This is a post with executable code.\n\nimport random\n\nrandom.randint(0,9)\n\n0"
  }
]